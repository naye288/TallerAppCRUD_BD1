package com.mycompany.TallerAppCRUD_BD1;

import java.awt.event.MouseEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Usuario
 */
public class Pantalla extends javax.swing.JFrame {
     
    public Pantalla() {   
        initComponents();
        // Configuración de la tabla
        DefaultTableModel tableModel = new DefaultTableModel(new String[]{"ID", "Nombre", "País","Nacimiento", "Vivo", "PrimeraPublicación","TotalPublicaciones", "Calificación"}, 0);
        table.setModel(tableModel);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cumple = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ConVida = new javax.swing.JTextField();
        btnHelp = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        PrimeraPublicacion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cantPublicaciones = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        calificacion = new javax.swing.JTextField();
        Name_Autor = new javax.swing.JLabel();
        IdPais = new javax.swing.JTextField();
        NameAutor = new javax.swing.JTextField();
        Pais = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Cumple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CumpleActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha de Nacimiento");

        ConVida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConVidaActionPerformed(evt);
            }
        });

        btnHelp.setText("Manual Usuario");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        jLabel3.setText("Fecha Primera Publicación");

        PrimeraPublicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimeraPublicacionActionPerformed(evt);
            }
        });

        jLabel4.setText("Total de Publicaciones");

        cantPublicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantPublicacionesActionPerformed(evt);
            }
        });

        jLabel5.setText("Calificación");

        calificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calificacionActionPerformed(evt);
            }
        });

        Name_Autor.setText("Nombre Autor");

        IdPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdPaisActionPerformed(evt);
            }
        });

        NameAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameAutorActionPerformed(evt);
            }
        });

        Pais.setText("País");

        btnInsert.setText("Agregar Autor");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        jLabel1.setText("Vivo");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Pais", "Fecha Nacimiento", "Vivo", "Primera Publicación", "Total Publicaciones", "Calificación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                int selectedRow = table.getSelectedRow(); //Obtiene la fila seleccionada
                if (selectedRow != -1) {
                    //Rellena los campos con los datos de la fila seleccionada
                    NameAutor.setText(table.getValueAt(selectedRow, 1).toString());
                    IdPais.setText(table.getValueAt(selectedRow, 2).toString());
                    ConVida.setText(table.getValueAt(selectedRow, 3).toString());
                    Cumple.setText(table.getValueAt(selectedRow, 4).toString());
                    PrimeraPublicacion.setText(table.getValueAt(selectedRow, 5).toString());
                    cantPublicaciones.setText(table.getValueAt(selectedRow, 6).toString());
                    calificacion.setText(table.getValueAt(selectedRow, 7).toString());
                }
            }
        });
        jScrollPane2.setViewportView(table);

        btnActualizar.setText("Actualizar actor");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnListar.setText("Listar Actores");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar Actor");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Name_Autor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NameAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnActualizar)
                                .addGap(108, 108, 108)
                                .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ConVida, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(calificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(29, 29, 29)
                                        .addComponent(Cumple, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PrimeraPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(83, 83, 83)
                                        .addComponent(Pais, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(IdPais, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cantPublicaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name_Autor)
                    .addComponent(NameAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(Cumple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pais)
                    .addComponent(IdPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ConVida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(PrimeraPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cantPublicaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(calificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnHelp)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CumpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CumpleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CumpleActionPerformed

    private void ConVidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConVidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConVidaActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        Manual help = new Manual();
        help.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_btnHelpActionPerformed

    private void PrimeraPublicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimeraPublicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrimeraPublicacionActionPerformed

    private void cantPublicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantPublicacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantPublicacionesActionPerformed

    private void calificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calificacionActionPerformed

    private void IdPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdPaisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdPaisActionPerformed

    private void NameAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameAutorActionPerformed

    private boolean validarDatos(Object[] datos) {
        for (Object dato : datos) {
            // Verifica si el elemento es null o es una cadena vacía
            if (dato == null || (dato instanceof String && ((String) dato).trim().isEmpty())) {
                return false; // Retorna false si encuentra un valor inválido
            }
        }
        return true; // Retorna true si todos los elementos están completos
    }  
    private Object[] extractData (){
        String name = NameAutor.getText();
        String pais = IdPais.getText();
        String convida = ConVida.getText();
        Date cumple = Date.valueOf(Cumple.getText());
        Date publi = Date.valueOf(PrimeraPublicacion.getText());
        int cali = (int) Double.parseDouble(calificacion.getText());
        int cantP = (int) Double.parseDouble(cantPublicaciones.getText());
        
        return new Object[]{name,pais,convida, cumple, publi, cantP, cali};
    }
    
    private void limpiarTexfield (){
        //limpiiar textfiel
        NameAutor.setText("");
        IdPais.setText("");
        Cumple.setText("");
        ConVida.setText("");
        PrimeraPublicacion.setText("");
        cantPublicaciones.setText("");
        calificacion.setText("");
                       
    }
    
    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        Object[] datos = extractData();
        if (validarDatos(datos)){ 
            int ID = AutorAccess.insertAutor((String)datos[0],(String)datos[1],(String)datos[2],(Date)datos[3],(Date)datos[4],(int)datos[5],(int)datos[6]); //Llamada al método que ejecuta el PA 
            JOptionPane.showMessageDialog(this, "ID generado: " + ID + " para el Autor de nombre: "+ (String)datos[0]);
            limpiarTexfield ();
        }
        else {
            JOptionPane.showMessageDialog(this, "No deben haber campos en blanco.");
        }
        
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        ResultSet rs = AutorAccess.getAutores(); //Llamada al método que ejecuta el PA 
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0); //Limpia la tabla antes de cargar nuevos datos

        try {
            if (rs == null){
                JOptionPane.showMessageDialog(this,"No hay autores registrados.");
            }
            //Itera a través del ResultSet y llena la tabla
            while (rs != null && rs.next()) {
                Object[] row = {
                    rs.getString("ID"),              //ID del autor
                    rs.getString("nombre"),               //Nombre del autor
                    rs.getString("pais"),               //País del autor
                    rs.getString("vivo"),                 //Estado de vida (vivo o no)
                    rs.getDate("fechaNacimiento"),        //Fecha de nacimiento
                    rs.getDate("primeraPublicacion"),     //Fecha de primera publicación
                    rs.getInt("publicaciones"),           //Cantidad de publicaciones
                    rs.getDouble("calificacion")          //Calificación
                };
                model.addRow(row); //Agrega la fila al modelo de la tabla
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar los datos de los autores.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int selectedRow = table.getSelectedRow(); // Obtener el ID del Autor
        if (selectedRow != -1) {  // -1 indica que no hay una fila seleccionada
            Object idValue = table.getValueAt(selectedRow,0);
            int id = (int) Double.parseDouble(idValue.toString());  // Convierte el valor a entero si es necesario
            if (AutorAccess.deleteAutores(id)){ 
                limpiarTexfield ();
                JOptionPane.showMessageDialog(this, "Autor con ID: "+ id +" liminado.");
            } else{//no deberia pasar ya que solo se elimina a los autores que estan en la tabla
                JOptionPane.showMessageDialog(this,"No se pudo eliminar al autor.");
            }           
        } else {
            limpiarTexfield ();
            JOptionPane.showMessageDialog(this,"No hay ninguna fila seleccionada.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pantalla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pantalla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConVida;
    private javax.swing.JTextField Cumple;
    private javax.swing.JTextField IdPais;
    private javax.swing.JTextField NameAutor;
    private javax.swing.JLabel Name_Autor;
    private javax.swing.JLabel Pais;
    private javax.swing.JTextField PrimeraPublicacion;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnListar;
    private javax.swing.JTextField calificacion;
    private javax.swing.JTextField cantPublicaciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
